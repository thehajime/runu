dist: bionic
language: go
go:
  - "1.13.x"

cache:
  directories:
    - $HOME/.ccache

env:
  global:
  - PACKAGE_NAME=docker-runu
  - RELEASE_VERSION=0.2
  - BINTRAY_REPO_NAME=debian
  - BINTRAY_ORG=ukontainer
  - BINTRAY_LICENSE=Apache-2.0
  - GO111MODULE=on

jobs:
  include:
    - os: linux
      cache:
        directories:
          - $HOME/.cache/go-build
      env:
        - DEB_ARCH=amd64
      before_install:
        - sudo apt-get install jq bridge-utils
    - os: linux
      cache:
        directories:
          - $HOME/.cache/go-build
      arch: arm64
      env:
        - DEB_ARCH=armhf
      before_install:
        - sudo dpkg --add-architecture armhf
        - sudo apt-get update && sudo apt-get install jq libc6:armhf crossbuild-essential-armhf
        - export CC=arm-linux-gnueabihf-gcc
        - export CGO_ENABLED=1
        - export GOARCH=arm
        - export RUNU_PATH="linux_arm/"
        - export PATH=$GOPATH/bin/linux_arm:$PATH
        - export DOCKER_RUN_ARGS_ARCH="--platform=linux/arm"
    - os: linux
      cache:
        directories:
          - $HOME/.cache/go-build
      arch: arm64
      env:
        - DEB_ARCH=arm64
      before_install:
        - sudo apt-get update && sudo apt-get install jq
        - export CGO_ENABLED=1
        - export GOARCH=arm64
    - os: osx
      osx_image: xcode12.5
      cache:
        directories:
          - $HOME/Library/Caches/go-build
      before_install:
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install jq
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install ukontainer/lkl/dockerd-darwin
        - mkdir -p ~/.local/bin
        - export PATH=/usr/local/opt/ccache/libexec:$HOME/.local/bin:$PATH
        - ln -sf /usr/local/bin/gsha256sum ~/.local/bin/sha256sum
    #- os: osx
    #  osx_image: xcode10.1
    #  cache:
    #    directories:
    #      - $HOME/Library/Caches/go-build
    #  before_install:
    #    - HOMEBREW_NO_AUTO_UPDATE=1 brew install jq
    #    - HOMEBREW_NO_AUTO_UPDATE=1 brew cask info tuntap
    #    - HOMEBREW_NO_AUTO_UPDATE=1 brew install ukontainer/lkl/dockerd-darwin
    #    - mkdir -p ~/.local/bin
    #    - export PATH=/usr/local/opt/ccache/libexec:$HOME/.local/bin:$PATH
    #    - ln -sf /usr/local/bin/gsha256sum ~/.local/bin/sha256sum
    #- os: osx
    #  osx_image: xcode10.2
    #  cache:
    #    directories:
    #      - $HOME/Library/Caches/go-build
    #  before_install:
    #    - HOMEBREW_NO_AUTO_UPDATE=1 brew install jq
    #    - HOMEBREW_NO_AUTO_UPDATE=1 brew cask info tuntap
    #    - HOMEBREW_NO_AUTO_UPDATE=1 brew install ukontainer/lkl/dockerd-darwin
    #    - mkdir -p ~/.local/bin
    #    - export PATH=/usr/local/opt/ccache/libexec:$HOME/.local/bin:$PATH
    #    - ln -sf /usr/local/bin/gsha256sum ~/.local/bin/sha256sum

before_script:
  - export -f travis_nanoseconds
  - export -f travis_fold
  - export -f travis_time_start
  - export -f travis_time_finish
  - export GO111MODULE=auto
  - go get -u github.com/gojp/goreportcard/cmd/goreportcard-cli
  - GO111MODULE=off go get -u github.com/alecthomas/gometalinter
  - go get -u github.com/gordonklaus/ineffassign
  - go get -u github.com/fzipp/gocyclo/cmd/gocyclo
  - go get -u github.com/client9/misspell/cmd/misspell
  - go get -u golang.org/x/lint/golint
  # Export variables containing versions and filename
  - export BUILD_VERSION=$RELEASE_VERSION.$TRAVIS_BUILD_NUMBER
  - export BUILD_DATE=$(date "+%Y%m%d")
  - export PACKAGE_NAME_VERSION=$PACKAGE_NAME-$BUILD_VERSION-$DEB_ARCH.deb

script:
  - if [ $TRAVIS_ARCH = "amd64" ] && [ $TRAVIS_OS_NAME = "linux" ] ; then GO111MODULE=on goreportcard-cli -t 100.0 -v ; fi
  - bash -e test/standalone-test.sh
  - bash -e test/docker-oci-test.sh
  - bash -e test/containerd-ctr-test.sh
  - bash -e test/docker-more-test.sh
  - bash -e test/docker-volume-test.sh
  - bash -e test/k8s-test.sh

after_failure:
  - cat /tmp/dockerd.log
  - cat /tmp/containerd.log
  - cat /tmp/docker-manifest.log


## package deploy to github release (TODO: look for bintray alt.)
before_deploy:
  - bash -ex pkg/pre-deploy-deb.sh
  - bash -ex pkg/pre-deploy-test-deb.sh

deploy:
  provider: releases
  api_key: $GITHUB_TOKEN
  file: $PACKAGE_NAME_VERSION
  skip_cleanup: true
  on:
    condition: $TRAVIS_OS_NAME = linux
    branch: master

after_deploy:
  - bash -ex pkg/post-deploy-deb.sh
  - bash -ex pkg/post-deploy-kind-img.sh
